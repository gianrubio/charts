{{- if .Values.prometheus.deploy }}
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: {{ template "prometheus-operator.fullname" . }}-prometheus
  labels:  
    app: {{ template "prometheus-operator.name" . }}-prometheus
    chart: {{ template "prometheus-operator.chartref" . }}
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
spec:
  alerting:
    alertmanagers:
{{- if .Values.prometheus.prometheusSpec.alertingEndpoints }}
{{ toYaml .Values.prometheus.prometheusSpec.alertingEndpoints | indent 6 }}
{{- else }}
      - namespace: {{ .Release.Namespace }}
        name: {{ template "prometheus-operator.fullname" . }}-alertmanager
        port: web
{{- end }}
  baseImage: "{{ .Values.prometheus.prometheusSpec.baseImage }}"
{{- if .Values.prometheus.prometheusSpec.externalLabels }}
  externalLabels:
{{ toYaml .Values.prometheus.prometheusSpec.externalLabels | indent 4}}
{{- end }}
{{- if .Values.prometheus.prometheusSpec.externalUrl }}
  externalUrl: "{{ .Values.externalUrl }}"
{{- else if .Values.prometheus.ingress.enabled }}
  externalUrl: "http://{{ index .Values.prometheus.ingress.hosts 0 }}{{ .Values.routePrefix }}"
{{- else }}
  externalUrl: http://{{ template "prometheus-operator.fullname" . }}-prometheus.{{ .Release.Namespace }}:9090
{{- end }}
{{- if .Values.prometheus.prometheusSpec.nodeSelector }}
  nodeSelector:
{{ toYaml .Values.prometheus.prometheusSpec.nodeSelector | indent 4 }}
{{- end }}
  paused: {{ .Values.prometheus.prometheusSpec.paused }}
  replicas: {{ .Values.prometheus.prometheusSpec.replicaCount }}
  logLevel:  {{ .Values.prometheus.prometheusSpec.logLevel }}
  resources:
{{ toYaml .Values.prometheus.prometheusSpec.resources | indent 4 }}
  retention: "{{ .Values.prometheus.prometheusSpec.retention }}"
{{- if .Values.prometheus.prometheusSpec.routePrefix }}
  routePrefix: "{{ .Values.prometheus.prometheusSpec.routePrefix }}"
{{- end }}
{{- if .Values.prometheus.prometheusSpec.secrets }}
  secrets:
{{ toYaml .Values.prometheus.prometheusSpec.secrets | indent 4 }}
{{- end }}
{{- if .Values.global.rbac.create }}
  serviceAccountName: {{ template "prometheus-operator.fullname" . }}-prometheus
{{- end }}
{{- if .Values.prometheus.prometheusSpec.serviceMonitorSelector }}
  serviceMonitorSelector:
{{ toYaml .Values.prometheus.prometheusSpec.serviceMonitorSelector | indent 4 }}
{{ else}}
  serviceMonitorSelector: {}
{{- end }}
{{- if .Values.prometheus.prometheusSpec.serviceMonitorNamespaceSelector }}
  serviceMonitorNamespaceSelector:
  {{ toYaml .Values.prometheus.prometheusSpec.serviceMonitorNamespaceSelector | indent 4 }}
{{ else }}
  serviceMonitorNamespaceSelector: {}
{{- end }}
{{- if .Values.prometheus.prometheusSpec.remoteRead }}
  remoteRead:
{{ toYaml .Values.prometheus.prometheusSpec.remoteRead | indent 4 }}
{{- end }}
{{- if .Values.prometheus.prometheusSpec.remoteWrite }}
  remoteWrite:
{{ toYaml .Values.prometheus.prometheusSpec.remoteWrite | indent 4 }}
{{- end }}
{{- if .Values.prometheus.prometheusSpec.ruleNamespaceSelector }}
  ruleNamespaceSelector:
{{ toYaml .Values.prometheus.prometheusSpec.ruleNamespaceSelector | indent 4 }}
{{- end }}
  ruleSelector:
  {{- if .Values.prometheus.prometheusSpec.ruleSelector }}
{{ toYaml .Values.prometheus.prometheusSpec.ruleSelector | indent 4}}
  {{- else }}
    matchLabels:
      app: {{ template "prometheus-operator.name" . }}
      release: {{ .Release.Name | quote }}
  {{- end }}
{{- if .Values.prometheus.prometheusSpec.storageSpec }}
  storage:
{{ toYaml .Values.prometheus.prometheusSpec.storageSpec | indent 4 }}
{{- end }}
  version: "{{ .Values.prometheus.prometheusSpec.version }}"
  {{- if .Values.prometheus.prometheusSpec.podMetadata }}
  podMetadata:
{{ toYaml .Values.prometheus.prometheusSpec.podMetadata | indent 4 }}
  {{- end }}
  affinity:
    podAntiAffinity:
{{- if eq .Values.prometheus.prometheusSpec.podAntiAffinity "hard" }}
      requiredDuringSchedulingIgnoredDuringExecution:
      - topologyKey: kubernetes.io/hostname
{{- else if eq .Values.prometheus.prometheusSpec.podAntiAffinity "soft" }}
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          topologyKey: kubernetes.io/hostname
{{- end }}
        labelSelector:
          matchLabels:
            app: prometheus
            prometheus: {{ template "prometheus-operator.fullname" . }}-prometheus
  imagePullSecrets:
{{ toYaml .Values.global.imagePullSecrets | indent 4 }}
{{- if or .Values.prometheus.prometheusSpec.additionalScrapeConfigs .Values.prometheus.prometheusSpec.additionalScrapeConfigsExternal }}
  additionalScrapeConfigs:
    name: {{ template "prometheus-operator.fullname" . }}-prometheus-additional-scrape-configs
    key: additional-scrape-configs.yaml
{{- end }}
{{- if .Values.prometheus.prometheusSpec.additionalAlertManagerConfigs }}
  additionalAlertManagerConfigs:
    name: {{ template "prometheus-operator.fullname" . }}-prometheus-additional-alertmanager-configs
    key: additional-alertmanager-configs.yaml
{{- end }}
{{- end }}