{{- if and .Values.prometheusOperator.deploy .Values.prometheusOperator.cleanupCustomResource }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "prometheus-operator.fullname" . }}-operator-cleanup
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-weight": "3"
    "helm.sh/hook-delete-policy": hook-succeeded
  labels:
    app: {{ template "prometheus-operator.name" . }}-operator
    chart: {{ template "prometheus-operator.chartref" . }}
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
spec:
  template:
    metadata:
      name: {{ template "prometheus-operator.fullname" . }}-operator-cleanup
      labels:
        app: {{ template "prometheus-operator.name" . }}-operator
        chart: {{ template "prometheus-operator.chartref" . }}
        release: {{ .Release.Name | quote }}
        heritage: {{ .Release.Service | quote }}
    spec:
    {{- if .Values.global.rbac.create }}
      serviceAccountName: {{ template "prometheus-operator.fullname" . }}-operator
    {{- end }}
      containers:
        - name: kubectl
          image: "{{ .Values.prometheusOperator.hyperkube.repository }}:{{ .Values.prometheusOperator.hyperkube.tag }}"
          imagePullPolicy: "{{ .Values.prometheusOperator.hyperkube.pullPolicy }}"
          command:
          - /bin/sh
          - -c
          - >
              kubectl delete alertmanager   --all;
              kubectl delete prometheus     --all;
              kubectl delete prometheusrule --all;
              kubectl delete servicemonitor --all;
              sleep 10;
              kubectl delete crd alertmanagers.monitoring.coreos.com;
              kubectl delete crd prometheuses.monitoring.coreos.com;
              kubectl delete crd prometheusrules.monitoring.coreos.com;
              kubectl delete crd servicemonitors.monitoring.coreos.com;
      restartPolicy: OnFailure
{{- end }}