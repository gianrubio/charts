apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  labels:
{{ toYaml .Values.prometheus.prometheusSpec.labels | indent 4 }}
  name: {{ template "prometheus.fullname" . }}
spec:
{{- if .Values.prometheus.prometheusSpec.labels }}
  podMetadata:
    labels:
{{ toYaml .Values.prometheus.prometheusSpec.labels | indent 6 }}
{{- end }}
{{- if .Values.prometheus.prometheusSpec.alertingEndpoints }}
  alerting:
    alertmanagers:
{{ toYaml .Values.prometheus.prometheusSpec.alertingEndpoints | indent 6 }}
{{- else }}
  alerting:
    alertmanagers:
      - namespace: {{ .Release.Namespace }}
        name: {{ printf "%s-alertmanager" .Release.Name | trunc 63 | trimSuffix "-" }}
        port: http
{{- end }}
  baseImage: "{{ .Values.image.repository }}"
{{- if .Values.prometheus.prometheusSpec.externalLabels }}
  externalLabels:
{{ toYaml .Values.prometheus.prometheusSpec.externalLabels | indent 4}}
{{- end }}
{{- if .Values.prometheus.prometheusSpec.externalUrl }}
  externalUrl: "{{ .Values.externalUrl }}"
{{- else if .Values.prometheus.ingress.enabled }}
  externalUrl: "http://{{ index .Values.prometheus.ingress.hosts 0 }}{{ .Values.routePrefix }}"
{{- else }}
  externalUrl: http://{{ template "prometheus.fullname" . }}.{{ .Release.Namespace }}:9090
{{- end }}
{{- if .Values.prometheus.prometheusSpec.nodeSelector }}
  nodeSelector:
{{ toYaml .Values.prometheus.prometheusSpec.nodeSelector | indent 4 }}
{{- end }}
  paused: {{ .Values.prometheus.prometheusSpec.paused }}
  replicas: {{ .Values.prometheus.prometheusSpec.replicaCount }}
  logLevel:  {{ .Values.prometheus.prometheusSpec.logLevel }}
  resources:
{{ toYaml .Values.prometheus.prometheusSpec.resources | indent 4 }}
  retention: "{{ .Values.retention }}"
{{- if .Values.prometheus.prometheusSpec.routePrefix }}
  routePrefix: "{{ .Values.routePrefix }}"
{{- end }}
{{- if .Values.prometheus.prometheusSpec.secrets }}
  secrets:
{{ toYaml .Values.prometheus.prometheusSpec.secrets | indent 4 }}
{{- end }}
{{- if .Values.rbac.create }}
  serviceAccountName: {{ template "prometheus.serviceAccountName" .}}
{{- end }}
{{ if and .Values.prometheus.prometheusSpec.config.specifiedInValues .Values.prometheus.prometheusSpec.config.value }}
{{- else if .Values.sprometheus.prometheusSpec.erviceMonitorsSelector }}
  serviceMonitorSelector:
{{ toYaml .Values.serviceMonitorsSelector | indent 4 }}
{{- else }}
  serviceMonitorSelector:
    matchLabels:
      prometheus: {{ .Values.prometheusLabelValue | default .Release.Name | quote }}
{{- end }}
{{- if .Values.prometheus.prometheusSpec.serviceMonitorNamespaceSelector }}
  serviceMonitorNamespaceSelector:
{{ toYaml .Values.prometheus.prometheusSpec.serviceMonitorNamespaceSelector | indent 4 }}
{{- end }}
{{- if .Values.prometheus.prometheusSpec.remoteRead }}
  remoteRead:
{{ toYaml .Values.prometheus.prometheusSpec.remoteRead | indent 4 }}
{{- end }}
{{- if .Values.prometheus.prometheusSpec.remoteWrite }}
  remoteWrite:
{{ toYaml .Values.prometheus.prometheusSpec.remoteWrite | indent 4 }}
{{- end }}
{{- if .Values.prometheus.prometheusSpec.ruleNamespaceSelector }}
  ruleNamespaceSelector:
{{ toYaml .Values.prometheus.prometheusSpec.ruleNamespaceSelector | indent 4 }}
{{- end }}
{{- if .Values.prometheus.prometheusSpec.rulesSelector }}
  ruleSelector:
{{ toYaml .Values.prometheus.prometheusSpec.rulesSelector | indent 4 }}
{{- else }}
  ruleSelector:
    matchLabels:
      prometheus: {{ .Values.prometheus.prometheusSpec.prometheusLabelValue | default .Release.Name | quote }}
{{- end }}
{{- if .Values.prometheus.prometheusSpec.storageSpec }}
  storage:
{{ toYaml .Values.prometheus.prometheusSpec.storageSpec | indent 4 }}
{{- end }}
  version: "{{ .Values.image.tag }}"
{{- if eq .Values.prometheus.prometheusSpec.podAntiAffinity "hard" }}
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - topologyKey: kubernetes.io/hostname
        labelSelector:
          matchLabels:
            app: {{ template "prometheus.name" . }}
            prometheus: {{ .Values.prometheus.prometheusSpec.prometheusLabelValue | default .Release.Name | quote }}
{{- else if eq .Values.prometheus.prometheusSpec.podAntiAffinity "soft" }}
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          topologyKey: kubernetes.io/hostname
          labelSelector:
            matchLabels:
              app: {{ template "prometheus.name" . }}
              prometheus: {{ .Values.prometheusLabelValue | default .Release.Name | quote }}
{{- end }}
{{- if .Values.tolerations }}
  tolerations:
{{ toYaml .Values.tolerations | indent 4 }}
{{- end }}
  imagePullSecrets: 
{{ toYaml .Values.global.imagePullSecrets | indent 4 }}
{{- if .Values.additionalScrapeConfigs }}
  additionalScrapeConfigs:
    name: prometheus-{{ .Release.Name }}-additional-scrape-configs
    key: additional-scrape-configs.yaml
{{- end }}
{{- if .Values.additionalAlertManagerConfigs }}
  additionalAlertManagerConfigs:
    name: prometheus-{{ .Release.Name }}-additional-alertmanager-configs
    key: additional-alertmanager-configs.yaml
{{- end }}
{{- if .Values.sidecarsSpec }}
  containers:
{{ toYaml .Values.sidecarsSpec | indent 4 }}
{{- end }}
